name: Gradle Build

on:
  push:

concurrency: build-${{ github.ref }}

jobs:
  publish_vars:
    runs-on: ubuntu-latest

    outputs:
      publish: ${{ steps.publish_vars.outputs.release != 'true' && (github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/heads/7.')) }}
      repo: ${{ steps.publish_vars.outputs.repo }}

    steps:

      - uses: actions/checkout@v4

      - name: Get publishing variables
        id: publish_vars
        uses: enonic/release-tools/publish-vars@master
        env:
          PROPERTIES_PATH: './gradle.properties'

  build:
    runs-on: ubuntu-latest

    needs: publish_vars

    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.client_payload.ref || github.ref }}

      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Build with Gradle
        run: ./gradlew ci --scan

      - uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Publish
        if: needs.publish_vars.outputs.publish == 'true'
        run: ./gradlew publish -Pcom.enonic.xp.app.production=true -PrepoKey=${{ needs.publish_vars.outputs.repo }} -PrepoUser=ci -PrepoPassword=${{ secrets.ARTIFACTORY_PASSWORD }}

  dispatch:
    needs: [ publish_vars, build ]
    strategy:
      matrix:
        repo: ["enonic/app-admin-home", "enonic/app-applications", "enonic/app-users", "enonic/app-standardidprovider", "enonic/app-xp-welcome" ]
    runs-on: ubuntu-latest
    if: needs.publish_vars.outputs.publish == 'true'
    steps:
      - name: Workflow Dispatch
        uses: benc-uk/workflow-dispatch@v1
        with:
          token: ${{ secrets.REPO_ACCESS_TOKEN }}
          repo: ${{ matrix.repo }}
          workflow: gradle.yml
