include 'core:core-api'
include 'core:core-event'
include 'core:core-schema'
include 'core:core-repo'
include 'core:core-security'
include 'core:core-image'
include 'core:core-export'
include 'core:core-mail'
include 'core:core-elasticsearch'
include 'core:core-content'
include 'core:core-site'
include 'core:core-i18n'
include 'core:core-media'
include 'core:core-app'
include 'core:core-service'
include 'core:core-extractor'
include 'core:core-blobstore'
include 'core:core-auth'
include 'core:core-macro'
include 'core:core-task'

include 'server:server-config'
include 'server:server-deploy'
include 'server:server-shell'
include 'server:server-status'
include 'server:server-udc'
include 'server:server-rest'
include 'server:server-trace'

include 'script:script-api'
include 'script:script-impl'

include 'web:web-api'
include 'web:web-impl'
include 'web:web-vhost'
include 'web:web-jetty'
include 'web:web-dos'
include 'web:web-dispatch'

include 'jaxrs:jaxrs-api'
include 'jaxrs:jaxrs-impl'

include 'portal:portal-api'
include 'portal:portal-owasp'
include 'portal:portal-impl'

include 'admin:admin-api'
include 'admin:admin-impl'
include 'admin:admin-event'
include 'admin:admin-ui'

include 'itest:itest-core'

include 'tools:upgrade'
include 'tools:toolbox'
include 'tools:testing'

include 'lib:lib-common'
include 'lib:lib-content'
include 'lib:lib-i18n'
include 'lib:lib-portal'
include 'lib:lib-mustache'
include 'lib:lib-thymeleaf'
include 'lib:lib-mail'
include 'lib:lib-auth'
include 'lib:lib-io'
include 'lib:lib-context'
include 'lib:lib-websocket'
include 'lib:lib-repo'
include 'lib:lib-node'
include 'lib:lib-task'
include 'lib:lib-value'
include 'lib:lib-event'
include 'lib:lib-admin'
include 'lib:lib-admin-ui'

include 'launcher:launcher-api'
include 'launcher:launcher-impl'
include 'launcher:launcher-ui'
include 'launcher:launcher-main'

include 'blobstore:blobstore-file'

include 'app:app-main'
include 'app:app-standardidprovider'
include 'app:app-users'
include 'app:app-applications'
include 'app:app-contentstudio'

include 'repack:repack-attoparser'
include 'repack:repack-elasticsearch'
include 'repack:repack-jparsec'
include 'repack:repack-okhttp'
include 'repack:repack-resteasy'

include 'distro'
include 'docs'

rootProject.name = 'xp'

configureProjects( rootProject )

def configureProjects( root )
{
    root.children.each { p ->
        configureProject( p )
        configureProjects( p )
    }
}

def configureProject( p )
{
    String dirName = p.path.substring( 1 ).replace( ':', '/' )
    p.projectDir = new File( (File) settingsDir, "modules/${dirName}" )
    assert p.projectDir.isDirectory()
}

