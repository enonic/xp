include 'core:core-api'
include 'core:core-event'
include 'core:core-schema'
include 'core:core-repo'
include 'core:core-security'
include 'core:core-image'
include 'core:core-export'
include 'core:core-mail'
include 'core:core-elasticsearch'
include 'core:core-content'
include 'core:core-site'
include 'core:core-i18n'
include 'core:core-media'
include 'core:core-resource'
include 'core:core-app'

include 'server:server-shell'
include 'server:server-status'

include 'script:script-api'
include 'script:script-impl'

include 'web:web-api'
include 'web:web-impl'
include 'web:web-vhost'
include 'web:web-jetty'
include 'web:web-dos'

include 'jaxrs:jaxrs-api'
include 'jaxrs:jaxrs-impl'
include 'jaxrs:jaxrs-swagger'

include 'portal:portal-api'
include 'portal:portal-impl'

include 'admin:admin-api'
include 'admin:admin-impl'
include 'admin:admin-event'
include 'admin:admin-ui'

include 'itest:itest-core'

include 'tools:upgrade'
include 'tools:toolbox'
include 'tools:testing'
include 'tools:gradle-plugin'

include 'lib:lib-content'
include 'lib:lib-i18n'
include 'lib:lib-portal'
include 'lib:lib-mustache'
include 'lib:lib-xslt'
include 'lib:lib-thymeleaf'
include 'lib:lib-mail'
include 'lib:lib-auth'
include 'lib:lib-http-client'
include 'lib:lib-io'
include 'lib:lib-cache'
include 'lib:lib-context'

include 'repack:repack-jparsec'
include 'repack:repack-attoparser'
include 'repack:repack-resteasy'
include 'repack:repack-elasticsearch'

include 'launcher'
include 'distro'
include 'docs'

rootProject.name = 'xp'

configureProjects( rootProject )

def configureProjects( root )
{
    root.children.each { p ->
        configureProject( p )
        configureProjects( p )
    }
}

def configureProject( p )
{
    String dirName = p.path.substring( 1 ).replace( ':', '/' )
    p.projectDir = new File( (File) settingsDir, "modules/${dirName}" )
    assert p.projectDir.isDirectory()
}
