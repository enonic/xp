apply plugin: 'java'
apply plugin: 'java-test-fixtures'
apply plugin: 'jacoco'

def defaultEncoding = 'UTF-8'

compileJava {
    options.encoding = defaultEncoding
    options.compilerArgs = ['-Xlint:-options'] // , '-Xlint:unchecked', '-Xlint:deprecation']
}

compileTestJava {
    options.encoding = defaultEncoding
    options.compilerArgs = ['-Xlint:-options'] // , '-Xlint:unchecked', '-Xlint:deprecation']
}

dependencies {
    testImplementation "org.junit.jupiter:junit-jupiter-api:${junitJupiterVersion}"
    testImplementation "org.junit.jupiter:junit-jupiter-params:${junitJupiterVersion}"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${junitJupiterVersion}"
    testImplementation "org.mockito:mockito-core:${mockitoVersion}"
    testImplementation "org.mockito:mockito-junit-jupiter:${mockitoVersion}"
    testImplementation "org.assertj:assertj-core:3.15.0"
    testImplementation 'org.springframework:spring-test:4.1.6.RELEASE'
    testRuntimeOnly "org.slf4j:slf4j-simple:${slf4jVersion}"
}

task testJar( type: Jar ) {
    group 'build'
    description 'Creates a jar file with all test sources.'
    from sourceSets.test.output
    archiveClassifier.set('test')
}

task sourcesJar( type: Jar ) {
    from sourceSets.main.allJava
    archiveClassifier.set('sources')
}

sourceCompatibility = JavaVersion.VERSION_11
targetCompatibility = sourceCompatibility

test {
    useJUnitPlatform {
        excludeTags 'elasticsearch'
    }
    systemProperty 'java.awt.headless', 'true'
    maxHeapSize = '2G'
    jvmArgs '-noverify', '-XX:TieredStopAtLevel=1'
}

task integrationTest(type: Test) {
    description = 'Runs integration tests.'
    group = 'verification'

    useJUnitPlatform {
        includeTags 'elasticsearch'
    }

    systemProperty 'java.awt.headless', 'true'
    maxHeapSize = '2G'

    shouldRunAfter test
}

check.dependsOn integrationTest

jacocoTestReport {
    executionData.from = files( "$buildDir/jacoco/test.exec", "$buildDir/jacoco/integrationTest.exec" )
}

jar {
    manifest {
        attributes( ['Implementation-Version': project.version] )
    }
}

publishing.publications {
    mavenJava( MavenPublication ) {
        artifact sourcesJar
    }
}

task allDependencies(type: DependencyReportTask) {}

task allDependencyInsight(type: DependencyInsightReportTask) {}
