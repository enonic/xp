.linear-gradient(@side, @startColor, @stopColor) {
  background: @startColor; /* Old browsers */
  background: -webkit-linear-gradient(@side, @startColor, @stopColor); /* Chrome10+,Safari5.1+ */
  background: -moz-linear-gradient(@side, @startColor, @stopColor); /* FF3.6+ */
  background: -ms-linear-gradient(@side, @startColor, @stopColor); /* IE10+ */
  background: -o-linear-gradient(@side, @startColor, @stopColor); /* Opera 11.10+ */
  background: linear-gradient(@side, @startColor, @stopColor); /* W3C */
}

.box-shadow(@value1,@value2:X,...) {
  @params: ~`"@{arguments}".replace(/[\[\]]|\,\sX/g, '')`;

  -webkit-box-shadow: @params;
  -moz-box-shadow: @params;
  box-shadow: @params;
}

.filter(@value) {
  -webkit-filter: @value;
  filter: @value;
}

.outline(@params) {
  -webkit-outline: @params;
  -moz-outline: @params;
  -ms-outline: @params;
  -o-outline: @params;
  outline: @params;
}

.border-radius(@size) {
  -webkit-border-radius: @size;
  -moz-border-radius: @size;
  -ms-border-radius: @size;
  -o-border-radius: @size;
  border-radius: @size;
}

.clearfix() {
  zoom: 1;
  &:before {
    content: '';
    display: table;
  }
  &:after {
    content: '';
    display: table;
    clear: both;
  }
}

.user-select(@value) {
  -webkit-touch-callout: none;
  -webkit-user-select: none;
  -khtml-user-select: none;
  -moz-user-select: -moz-none;
  -ms-user-select: none;
  user-select: none;
}

.notSelectable() {
  .user-select(none);
}

.selectable() {
  .user-select(all);
}

.noAppearance() {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
}

.box-sizing(@value) {
  -moz-box-sizing: @value;
  -webkit-box-sizing: @value;
  -ms-box-sizing: @value;
  box-sizing: @value;
}

.placeholder(@size, @style) {
  &::-webkit-input-placeholder {
    font-size: @size;
    font-style: @style;
  }

  &::-moz-placeholder {
    font-size: @size;
    font-style: @style;
  }

  &:-moz-placeholder {
    font-size: @size;
    font-style: @style;
  }

  &:-ms-input-placeholder {
    font-size: @size;
    font-style: @style;
  }
}

.dropcircle(@radius: 200px) {
  position: absolute;
  display: block;
  margin: 0 auto;
  top: 50%;
  left: 50%;
  margin-top: -@radius;
  margin-left: -@radius;
  background-color: @admin-blue;
  width: 2 * @radius;
  height: 2 * @radius;
  line-height: 2 * @radius;
  color: #fff;
  content: attr(data-drop);
  font-weight: normal;

  .box-sizing(border-box);
  .border-radius(@radius);
  .box-shadow(0 0 10px @admin-shadow-gray);
  .animation(pulsate, 4s);
}

.transition (@value1,@value2:X,...) {
  @params: ~`"@{arguments}".replace(/[\[\]]|\,\sX/g, '')`;

  -webkit-transition: @params;
  -moz-transition: @params;
  -o-transition: @params;
  transition: @params;
}

.transition-timing-function(@value) {
  -webkit-transition-timing-function: @value;
  transition-timing-function: @value;
}

.transform (@function) {
  -webkit-transform: @function;
  -moz-transform: @function;
  -ms-transform: @function;
  -o-transform: @function;
  transform: @function;
}

.scale (@factor) {
  .transform(scale(@factor));
}

.rotate (@degrees) {
  .transform(rotate(@degrees));
}

.ellipsis() {
  overflow: hidden;
  white-space: pre;
  text-overflow: ellipsis;
}

.placeholderColor(@color) {
  &::-webkit-input-placeholder {
    /* WebKit browsers */
    color: @color;
  }
  &:-moz-placeholder {
    /* Mozilla Firefox 4 to 18 */
    color: @color;
  }
  &::-moz-placeholder {
    /* Mozilla Firefox 19+ */
    color: @color;
  }
  &:-ms-input-placeholder {
    /* Internet Explorer 10+ */
    color: @color;
  }
}

.animation (@name, @duration: 1s, @delay: 0s, @ease: ease, @iteration: infinite) {
  -webkit-animation: @name @duration @delay @ease @iteration;
  -moz-animation: @name @duration @delay @ease @iteration;
  -ms-animation: @name @duration @delay @ease @iteration;
  animation: @name @duration @delay @ease @iteration;
}

.default-slick-cell-styling(@padding: 8px) {
  border: none;
  padding: @padding;
  cursor: default;
  .box-sizing(border-box);
}

.flexbox() {
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
}

.flex(@values) {
  -webkit-box-flex: @values;
  -moz-box-flex: @values;
  -webkit-flex: @values;
  -ms-flex: @values;
  flex: @values;
}

.order(@value) {
  -webkit-box-ordinal-group: @value;
  -moz-box-ordinal-group: @value;
  -ms-flex-order: @value;
  -webkit-order: @value;
  order: @value;
}

.align-items(@value) {
  -webkit-align-items: @value;
  -moz-align-items: @value;
  -ms-align-items: @value;
  -ms-flex-align: @value;
  align-items: @value;
}

.opacity(@value) {
  -webkit-opacity: @value;
  -moz-opacity: @value;
  opacity: @value;
}

.arrow(@color, @height) {

  &:before {
    content: " ";
    height: 0;
    width: 0;
    position: absolute;
    pointer-events: none;
    border: @height solid transparent;
  }

  &.bottom {
    margin-top: @height;

    &:before {
      border-bottom-color: @color;
      top: -2 * @height;
      left: 50%;
      margin-left: -@height;
    }
  }

  &.left {
    margin-right: @height;

    &:before {
      border-left-color: @color;
      right: -2 * @height;
      top: 50%;
      margin-top: -@height;
    }
  }

  &.top {
    margin-bottom: @height;

    &:before {
      border-top-color: @color;
      bottom: -2 * @height;
      left: 50%;
      margin-left: -@height;
    }
  }

  &.right {
    margin-left: @height;

    &:before {
      border-right-color: @color;
      left: -2 * @height;
      top: 50%;
      margin-top: -@height;
    }
  }
}

.focusable() {
  &:focus:not(:disabled) {
    box-sizing: border-box;
    box-shadow: 0 0 5px @admin-input-blue;
    border: 1px solid @admin-input-blue;
  }
}

// Reset all possible attributes user might have added to a page element
// Use for all styles present on live edit page in order to reset user styles
// http://stackoverflow.com/a/15903168
.reset(@recursive: undefined) {
  animation: none;
  animation-delay: 0;
  animation-direction: normal;
  animation-duration: 0;
  animation-fill-mode: none;
  animation-iteration-count: 1;
  animation-name: none;
  animation-play-state: running;
  animation-timing-function: ease;
  backface-visibility: visible;
  background: 0;
  background-attachment: scroll;
  background-clip: border-box;
  background-color: transparent;
  background-image: none;
  background-origin: padding-box;
  background-position: 0 0;
  background-position-x: 0;
  background-position-y: 0;
  background-repeat: repeat;
  background-size: auto auto;
  border: 0;
  border-style: none;
  border-width: medium;
  border-color: inherit;
  border-bottom: 0;
  border-bottom-color: inherit;
  border-bottom-left-radius: 0;
  border-bottom-right-radius: 0;
  border-bottom-style: none;
  border-bottom-width: medium;
  border-collapse: separate;
  border-image: none;
  border-left: 0;
  border-left-color: inherit;
  border-left-style: none;
  border-left-width: medium;
  border-radius: 0;
  border-right: 0;
  border-right-color: inherit;
  border-right-style: none;
  border-right-width: medium;
  border-spacing: 0;
  border-top: 0;
  border-top-color: inherit;
  border-top-left-radius: 0;
  border-top-right-radius: 0;
  border-top-style: none;
  border-top-width: medium;
  bottom: auto;
  box-shadow: none;
  box-sizing: content-box;
  caption-side: top;
  clear: none;
  clip: auto;
  color: inherit;
  columns: auto;
  column-count: auto;
  column-fill: balance;
  column-gap: normal;
  column-rule: medium none currentColor;
  column-rule-color: currentColor;
  column-rule-style: none;
  column-rule-width: none;
  column-span: 1;
  column-width: auto;
  content: normal;
  counter-increment: none;
  counter-reset: none;
  cursor: auto;
  direction: ltr;
  display: block;
  empty-cells: show;
  float: none;
  font: normal;
  font-style: normal;
  font-variant: normal;
  font-weight: normal;
  height: auto;
  hyphens: none;
  left: auto;
  letter-spacing: normal;
  line-height: normal;
  list-style: none;
  list-style-image: none;
  list-style-position: outside;
  list-style-type: disc;
  margin: 0;
  margin-bottom: 0;
  margin-left: 0;
  margin-right: 0;
  margin-top: 0;
  max-height: none;
  max-width: none;
  min-height: 0;
  min-width: 0;
  opacity: 1;
  orphans: 0;
  outline-width: 2px;
  overflow: visible;
  overflow-x: visible;
  overflow-y: visible;
  padding: 0;
  padding-bottom: 0;
  padding-left: 0;
  padding-right: 0;
  padding-top: 0;
  page-break-after: auto;
  page-break-before: auto;
  page-break-inside: auto;
  perspective: none;
  perspective-origin: 50% 50%;
  position: static;
  /* May need to alter quotes for different locales (e.g fr) */
  quotes: '\201C' '\201D' '\2018' '\2019';
  right: auto;
  tab-size: 8;
  table-layout: auto;
  text-align: inherit;
  text-align-last: auto;
  text-decoration: none;
  text-decoration-color: inherit;
  text-decoration-line: none;
  text-decoration-style: solid;
  text-indent: 0;
  text-shadow: none;
  text-transform: none;
  top: auto;
  transform: none;
  transform-style: flat;
  transition: none;
  transition-delay: 0s;
  transition-duration: 0s;
  transition-property: none;
  transition-timing-function: ease;
  unicode-bidi: normal;
  vertical-align: baseline;
  visibility: visible;
  white-space: normal;
  widows: 0;
  width: auto;
  word-spacing: normal;
  z-index: auto;

  // If recursive is true then set the font on the root
  // and reset only direct children non-recursively and without resetting font
  // too unpredictable to apply to every child
  & when (@recursive = true) {
    font-family: @admin-font-family;
    font-size: @admin-font-size;

    & > * {
      .reset(false);
    }
  }

  // If recursive is false, meaning it was called from inside the recursion
  // inherit the font as it was set to the recursion root
  & when (@recursive = false) {
    font-family: inherit;
    font-size: inherit;
  }

  // Also reset font if the recursive param is omitted
  // meaning this is a reset for single element
  & when (@recursive = undefined) {
    font-family: @admin-font-family;
    font-size: @admin-font-size;
  }
}

.watermark-text(@font-size: 16px, @ellipsis: false) {
  font-size: @font-size;
  font-family: @admin-font-family;
  color: lightgray;
  top: 50%;
  text-align: center;
  line-height: 30px;
  overflow: hidden;
  text-overflow: ellipsis;
  text-align: center;
  width: 100%;
  position: absolute;
  & when (@ellipsis = true) {
    .ellipsis();
  }
}

.picker() {
  .@{_COMMON_PREFIX}button {
    position: absolute;
    height: 100%;
    top: 0;
    right: 0;
    background: transparent;
    padding: 0 6px;
    border: 1px solid transparent;
    font-size: 20px;
    line-height: 0px;
    &:before {
      color: @admin-dark-gray;
      vertical-align: middle;
    }
    &:hover, &:active {
      background: transparent;
      &:before {
        color: @admin-dark-gray;
      }
    }
  }

  .@{_COMMON_PREFIX}wrapper {
    position: relative;

    .@{_COMMON_PREFIX}text-input {
      width: 100%;
      padding: 4px 32px 4px 5px;
      line-height: 27px;
    }
  }
}

.picker-icon(@picker-type: "date", @font-size: 18px, @top: 9px, @right: 7px, @pointer-events: none) {
  &:before {
    & when (@picker-type = "date") {
      .icon-calendar;
    }
    & when (@picker-type = "time") {
      .icon-clock;
    }

    position: absolute;
    right: @right;
    top: @top;
    font-size: @font-size;
    pointer-events: @pointer-events;

  }
}

.picker-dialog(@width: 100%, @padding: 10px) {
  position: absolute;
  display: none;
  top: auto;
  left: auto;
  bottom: auto;
  right: auto;
  height: auto;
  width: @width;
  z-index: 100;
  padding: @padding;
  background-color: #fff;
  .material-layer-shadow();
}

.date-picker-mixin(@width: 100%, @padding: 10px) {
  .date-picker-dialog {
    .picker-dialog(@width, @padding);
    box-sizing: border-box;

    h2, h5 {
      text-align: center;
      position: relative;
    }

    .prev, .next {
      position: absolute;
      cursor: pointer;
      color: @admin-button-blue2;
      vertical-align: middle;
      text-decoration: none;
    }

    .prev {
      .icon-arrow-left();
    }

    .year-container {
      .prev {
        top: 5px;
        left: 15px;
      }
      .next {
        top: 5px;
        right: 15px;
      }
    }

    .next {
      .icon-arrow-right4();
    }

    .month-container {
      margin: 5px 0 10px 0;
      .prev {
        top: 2px;
        left: 24px;
      }
      .next {
        top: 2px;
        right: 24px;
      }
    }
    .calendar {
      text-align: center;
    }
  }
}

.time-picker-mixin() {
  .time-picker-dialog {
    .picker-dialog(auto, 5px);

    li {
      display: inline-block;
      font-size: 30px;
      line-height: 40px;
      padding: 5px;

      &.colon {
        vertical-align: top;
        padding: 0;
        margin-top: 19px;

        &:before {
          content: ':';
        }
      }

      a, span {
        display: block;
      }

      .prev, .next {
        cursor: pointer;
        overflow: hidden;
        height: 16px;

        width: 34px;
        text-align: center;

        span {
          position: absolute;
          width: inherit;
          margin-top: -3px;
          font-size: 0.8em;
          color: @admin-button-blue2;
        }
      }

      .prev {
        span {
          .icon-arrow-down4();
        }
      }

      .next {
        span {
          .icon-arrow-up2();
        }
      }

    }

    .timezone {
      color: @admin-button-blue2;
      font-size: 15px;
      display: block;
      line-height: 25px;
    }
  }
}

.container-title-mixin(@font-size: 32px, @bottom: -9px) {
  color: @admin-white;
  font-family: @admin-font-family;
  font-size: @font-size;
  font-weight: 100;
  position: absolute;
  bottom: @bottom;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

.home-main-container-mixin() {
  position: fixed;
  left: 0;
  top: 0;
  right: 0;
  bottom: 0;

  .center-panel {
    width: 100%;
    position: absolute;
    background-color: rgba(0, 0, 0, 0.4);
    top: 0;
    bottom: 0;
  }

  .lazy-image {
    width: 100%;
    min-height: 100%;

    background-repeat: no-repeat;
    background-attachment: fixed;
    -webkit-background-size: cover;
    -moz-background-size: cover;
    -o-background-size: cover;
    background-size: cover;
    background-position: center;

    transition: opacity 2s;
    &.empty {
      opacity: 0;
    }
  }
}

.headers_mixin() {

  h1 {
    font-size: 34px;
    line-height: 40px;
  }

  h2 {
    font-size: 30px;
    line-height: 40px;
  }

  h3 {
    font-size: 26px;
    line-height: 40px;
  }

  h4 {
    font-size: 22px;
    line-height: 20px;
  }

  h5 {
    font-size: 18px;
    line-height: 20px;
  }

  h6 {
    font-size: 14px;
    line-height: 16px;
  }
}

.icon-close-mixin(@right: 0) {
  .icon-close {
    .focusable();
    position: absolute;
    top: 50%;
    right: @right;
    margin-top: -6px;
    border: 1px solid transparent;
    cursor: pointer;
    text-decoration: none;
  }
}

.flat-mixin(@bgColor: @admin-white) {
  .border-radius(0);
  background-image: none;
  box-shadow: none;
  background-color: @bgColor;
}

.is-processing-mixin() {
  .dependants {
    display: none !important;
  }

  .progress-bar {
    display: block;
    margin-bottom: 20px;
    height: 25px;

    .progress-indicator {
      background-color: @admin-green;
    }
  }

  .button-container {
    float: none;
    text-align: center;

    *:not(.cancel-button-bottom) {
      display: none !important;
    }

    .cancel-button-bottom {
      span {
        display: none;
      }
      &:after {
        content: attr(data-button-text);
        color: @admin-white;
        width: 100px;
        line-height: 24px;
        font-size: 16px;
      }
    }
  }
}

.content-status-mixin() {
  .equal, .online {
    color: @admin-green;
    &.pending {
      color: @admin-orange;
    }
    &.expired {
      color: @admin-red;
    }
  }
  .offline {
    color: @admin-font-gray1;
  }
  .modified {
    font-style: italic;
  }
}

.app-icon-mixin(@hideText: false, @invertIcon: false) {
  .home-button {
    position: relative;
    display: table;
    min-width: 25px;
    padding: 0 15px 0 0;
    height: 100%;
    font-family: @admin-font-family;
    color: @admin-bg-light-gray;
    z-index: 1;

    .app-icon {
      width: 25px;
      height: 28px;
      position: absolute;
      top: 0;
      bottom: 0;
      margin: auto;

      & when (@invertIcon = true) {
        filter: invert(100%);
      }

    }
    .app-name {
      display: table-cell;
      vertical-align: middle;
      padding-left: 35px;
      font-size: 15px;
      text-transform: uppercase;
      line-height: inherit;

      & when (@hideText = true) {
        display: none;
      }
    }

    &.clickable {
      &:hover {
        opacity: 0.5;
      }
      cursor: pointer;
    }
  }
}
