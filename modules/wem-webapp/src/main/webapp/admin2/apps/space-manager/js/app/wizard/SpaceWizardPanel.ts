module app_wizard {

    export class SpaceWizardPanel extends api_app_wizard.WizardPanel {

        public static NEW_WIZARD_HEADER = "New Space";

        private static DEFAULT_SPACE_ICON_URL:string = "/admin/rest/space/image/_";

        private closeAction:api_ui.Action;

        private saveAction:api_ui.Action;

        private duplicateAction:api_ui.Action;

        private deleteAction:api_ui.Action;

        private formIcon:api_app_wizard.FormIcon;

        private spaceWizardHeader:api_app_wizard.WizardHeaderWithDisplayNameAndName;

        private spaceForm:SpaceForm;

        private schemaPanel:api_ui.Panel;

        private modulesPanel:api_ui.Panel;

        private templatesPanel:api_ui.Panel;

        private persistedSpace:api_remote_space.Space;

        constructor() {

            this.spaceWizardHeader = new api_app_wizard.WizardHeaderWithDisplayNameAndName();
            this.formIcon = new api_app_wizard.FormIcon(SpaceWizardPanel.DEFAULT_SPACE_ICON_URL, "Click to upload icon", "rest/upload");

            this.closeAction = new api_app_wizard.CloseAction(this);
            this.saveAction = new api_app_wizard.SaveAction(this);
            this.duplicateAction = new DuplicateSpaceAction();
            this.deleteAction = new DeleteSpaceAction();

            var toolbar = new SpaceWizardToolbar({
                saveAction: this.saveAction,
                duplicateAction: this.duplicateAction,
                deleteAction: this.deleteAction,
                closeAction: this.closeAction
            });

            super({
                formIcon: this.formIcon,
                toolbar: toolbar,
                header: this.spaceWizardHeader
            });

            this.spaceWizardHeader.setDisplayName(SpaceWizardPanel.NEW_WIZARD_HEADER);
            this.spaceWizardHeader.setName(this.spaceWizardHeader.generateName(SpaceWizardPanel.NEW_WIZARD_HEADER));
            this.spaceWizardHeader.setAutogenerateDisplayName(true);
            this.spaceWizardHeader.setAutogenerateName(true);

            this.spaceForm = new SpaceForm();

            this.schemaPanel = new api_ui.Panel("schemaPanel");
            var h1El = new api_dom.H1El();
            h1El.getEl().setInnerHtml("TODO: schema");
            this.schemaPanel.appendChild(h1El);

            this.modulesPanel = new api_ui.Panel("modulesPanel");
            h1El = new api_dom.H1El();
            h1El.getEl().setInnerHtml("TODO: modules");
            this.modulesPanel.appendChild(h1El);

            this.templatesPanel = new api_ui.Panel("templatesPanel");
            h1El = new api_dom.H1El();
            h1El.getEl().setInnerHtml("TODO: templates");
            this.templatesPanel.appendChild(h1El);

            this.addStep(new api_app_wizard.WizardStep("Space"), this.spaceForm);
            this.addStep(new api_app_wizard.WizardStep("Schemas"), this.schemaPanel);
            this.addStep(new api_app_wizard.WizardStep("Modules"), this.modulesPanel);
            this.addStep(new api_app_wizard.WizardStep("Templates"), this.templatesPanel);
        }

        setPersistedItem(space:api_remote_space.Space) {
            super.setPersistedItem(space);

            this.spaceWizardHeader.setDisplayName(space.displayName);
            this.spaceWizardHeader.setName(space.name);
            this.formIcon.setSrc(space.iconUrl);

            // setup displayName and name to be generated automatically
            // if corresponding values are empty
            this.spaceWizardHeader.setAutogenerateDisplayName(!space.displayName);
            this.spaceWizardHeader.setAutogenerateName(!space.name || space.name == this.spaceWizardHeader.generateName(space.displayName));

            this.persistedSpace = space;
        }

        persistNewItem(successCallback?:() => void) {

            var createParams:api_remote_space.CreateParams = {
                spaceName: this.spaceWizardHeader.getName(),
                displayName: this.spaceWizardHeader.getDisplayName(),
                iconReference: this.getIconUrl()
            };

            api_remote_space.RemoteSpaceService.space_createOrUpdate(createParams, () => {

                new app_wizard.SpaceCreatedEvent().fire();
                api_notify.showFeedback('Space was created!');

                if (successCallback) {
                    successCallback.call(this);
                }
            });
        }

        updatePersistedItem(successCallback?:() => void) {

            var updateParams:api_remote_space.UpdateParams = {
                spaceName: this.persistedSpace.name,
                newSpaceName: this.spaceWizardHeader.getName(),
                displayName: this.spaceWizardHeader.getDisplayName(),
                iconReference: this.getIconUrl()
            };

            api_remote_space.RemoteSpaceService.space_createOrUpdate(updateParams, () => {

                new app_wizard.SpaceUpdatedEvent().fire();
                api_notify.showFeedback('Space was saved!');

                if (successCallback) {
                    successCallback.call(this);
                }
            });
        }
    }
}