module app_wizard {

    export class ContentTypeWizardPanel extends api_app_wizard.WizardPanel {

        private static DEFAULT_CHEMA_ICON_URL: string = '/admin/rest/schema/image/ContentType:system:structured';

        private saveAction: api_ui.Action;

        private closeAction: api_ui.Action;

        private formIcon: api_app_wizard.FormIcon;

        private toolbar: api_ui_toolbar.Toolbar;

        private persistedContentType: api_remote_contenttype.ContentType;

        constructor(id: string) {
            this.formIcon = new api_app_wizard.FormIcon(ContentTypeWizardPanel.DEFAULT_CHEMA_ICON_URL, "Click to upload icon", "rest/upload");

            this.saveAction = new SaveContentTypeAction();
            this.closeAction = new CloseContentTypeAction(this, true);

            this.toolbar = new ContentTypeWizardToolbar({
                saveAction: this.saveAction,
                closeAction: this.closeAction
            });

            super({
                formIcon: this.formIcon,
                toolbar: this.toolbar,
                saveAction: this.saveAction
            });

            this.setDisplayName("New Content Type");
            this.setName(this.generateName(this.getDisplayName()));
            this.setAutogenerateDisplayName(true);
            this.setAutogenerateName(true);

            this.addStep(new api_app_wizard.WizardStep("Content Type", new ContentTypeForm()));
        }

        setPersistedItem(contentType: api_remote_contenttype.ContentType) {
            super.setPersistedItem(contentType);

            this.setDisplayName(contentType.displayName);
            this.setName(contentType.name);
            this.formIcon.setSrc(contentType.iconUrl);

            this.setAutogenerateDisplayName(!contentType);
            this.setAutogenerateName(!contentType.name || contentType.name == this.generateName(contentType.displayName));

            this.persistedContentType = contentType;
        }

        persistNewItem() {
//            var createParams:api_remote.RemoteCallContentTypeCreateOrUpdateParams = {
//                // TODO: set contentType xml.
//                contentType: "",
//                iconReference: this.getIconUrl()
//            };
//
//            api_remote.RemoteService.contentType_createOrUpdate(createParams, () => {
//                new app_wizard.ContentTypeCreatedEvent().fire();
//                api_notify.showFeedback('Relationship type was created!');
//            });
        }

        updatePersistedItem() {
//            var updateParams:api_remote.RemoteCallContentTypeCreateOrUpdateParams = {
//                // TODO: set contentType xml.
//                contentType: "",
//                iconReference: this.getIconUrl()
//            };
//
//            api_remote.RemoteService.contentType_createOrUpdate(updateParams, () => {
//                new app_wizard.ContentTypeUpdatedEvent().fire();
//                api_notify.showFeedback('Relationship type was saved!');
//            });
        }

        askUserForSaveChangesBeforeClosing() {
            if (!components.wizardSaveDialog) {
                components.wizardSaveDialog = new app_wizard.SchemaWizardSaveDialog();
            }
            components.wizardSaveDialog.setWizardToSave(this).open();
        }
    }
}